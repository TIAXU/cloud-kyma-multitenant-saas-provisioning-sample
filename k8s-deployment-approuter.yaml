---
apiVersion: gateway.kyma-project.io/v1alpha1
kind: APIRule
metadata:
  creationTimestamp: null
  labels:
    app: kyma-multitenant-approuter-multitenancy
    release: multitenancy
  name: kyma-multitenant-approuter-multitenancy
spec:
  gateway: kyma-gateway.kyma-system.svc.cluster.local
  rules:
  - accessStrategies:
    - handler: allow
    methods:
    - GET
    - POST
    - PUT
    - PATCH
    - DELETE
    - HEAD
    path: /.*
    # mutators:
    # - handler: header
    #   config:
    #     headers:
    #       x-forwarded-host: kyma-multitenant-approuter.e6803e4.kyma.shoot.live.k8s-hana.ondemand.com # adapt to your Kyma cluster
  service:
    host: kyma-multitenant-approuter.e6803e4.kyma.shoot.live.k8s-hana.ondemand.com
    name: kyma-multitenant-approuter-multitenancy
    port: 8080


---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: kyma-multitenant-approuter-multitenancy
    release: multitenancy
  name: kyma-multitenant-approuter-multitenancy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kyma-multitenant-approuter-multitenancy
      release: multitenancy
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kyma-multitenant-approuter-multitenancy
        release: multitenancy
    spec:
      automountServiceAccountToken: false
      imagePullSecrets:
        - name: registry-secret # replace with your own registry secret
      containers:
      - env:
        - name: destinations
          valueFrom: 
            configMapKeyRef:
              name: destinations-config
              key: destinations
        - name: CLUSTER_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: cluster-domain
              name: cluster-domain
        # - name: TENANT_HOST_PATTERN
        #   value: ^(.*)-kyma-multitenant-approuter.$(CLUSTER_DOMAIN)"   
        - name: PORT
          value: "8080"
        - name: TMPDIR
          value: /tmp
        - name: VCAP_APPLICATION
          value: |-
            {
              "process_id": 1,
              "instance_id": 1,
              "application_name": "kyma-multitenant-approuter",
              "application_id": "04d84f97-a039-4462-87cc-a5c444663a8e",
              "application_version": "488998d5-805d-428f-b5ae-458be0695357",
              "application_uris": [
                "kyma-multitenant-approuter.e6803e4.kyma.shoot.live.k8s-hana.ondemand.com"
              ],
              "uris": [
                "kyma-multitenant-approuter.e6803e4.kyma.shoot.live.k8s-hana.ondemand.com"
              ]
            }
        image: tiaxu/multitenant-approuter:v1
        livenessProbe:
          exec:
            command:
            - nc
            - -z
            - localhost
            - "8080"
          failureThreshold: 1
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 60
        name: kyma-multitenant-approuter-multitenancy
        ports:
        - containerPort: 8080
        readinessProbe:
          exec:
            command:
            - nc
            - -z
            - localhost
            - "8080"
          failureThreshold: 1
          initialDelaySeconds: 60
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 60
        resources:
          limits:
            ephemeral-storage: 256M
            memory: 256M
          requests:
            cpu: 100m
            ephemeral-storage: 256M
            memory: 256M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
        volumeMounts:
        - name: xsuaa-volume
          mountPath: "/etc/secrets/sapcp/xsuaa/uaa-kyma-multitenant"
          readOnly: true
        - mountPath: /tmp
          name: tmp
      securityContext:
        runAsNonRoot: true
      volumes:
      - emptyDir: {}
        name: tmp
      - name: xsuaa-volume
        secret:
          secretName: uaa-kyma-multitenant-binding
status: {}

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: kyma-multitenant-approuter-multitenancy
    release: multitenancy
  name: kyma-multitenant-approuter-multitenancy
spec:
  type: ClusterIP
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: kyma-multitenant-approuter-multitenancy
    release: multitenancy


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: destinations-config
data:
# two alternatives: # adapt to your Kyma cluster
#   1. use (external) service url provided by Kyma APIRule (JWT enabled) (see application "deployment.yaml" APIRule)
  # destinations: |
  #   [
  #     {"name":"broker","url":"https://broker.e6803e4.kyma.shoot.live.k8s-hana.ondemand.com","forwardAuthToken" : true}
  #   ]
#   2. use cluster internal service url:  note that internal service naming follows http://<service-name>.<namespace>.svc.cluster.local:<service-port>
#  make sure "namespace" of the broker is adapted when deploying to different namespace
  destinations: |
    [
      {"name":"dest_kyma_multitenant_node","url":"https://kyma-multitenant-node.e6803e4.kyma.shoot.live.k8s-hana.ondemand.com","forwardAuthToken" : true}
    ] 
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-domain
data:
  cluster-domain: e6803e4.kyma.shoot.live.k8s-hana.ondemand.com  ## adapt to your Kyma cluster



